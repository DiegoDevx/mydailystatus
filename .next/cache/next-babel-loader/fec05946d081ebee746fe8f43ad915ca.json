{"ast":null,"code":"var _jsxFileName = \"D:\\\\AMBDEV\\\\MYDAILYSTATUS\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Status pr\\xF3ximos a voc\\xEA\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 33\n      }\n    }, checkin.id === props.user.sub), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 33\n      }\n    }, checkin.status), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }\n    }, JSON.stringify(checkin.coords)), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }\n    }, checkin.distance));\n  })));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      // pode ver os outros checkins\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todaysData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance(todaysData.coordinates.latitude, todaysData.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude)\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  console.log(session);\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["D:/AMBDEV/MYDAILYSTATUS/pages/app.js"],"names":["React","useEffect","auth0","router","db","distance","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","user","sub","status","JSON","stringify","coords","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","get","todaysData","data","near","center","coordinates","radius","checkinsList","docs","forEach","lat","latitude","long","longitude","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport { db } from '../lib/db'\r\nimport { distance } from '../lib/geo'\r\n\r\nconst App = (props) => {\r\n    useEffect(() => {\r\n        if(!props.isAuth){\r\n            router.push('/')\r\n        }else if(props.forceCreate){\r\n            router.push('/create-status')\r\n        }\r\n    })\r\n    if(!props.isAuth || props.forceCreate){\r\n        return null\r\n    }\r\n    return ( \r\n        <div>\r\n            <h1>Status próximos a você</h1>\r\n            <table>\r\n                    {props.checkins.map(checkin => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{checkin.id === props.user.sub}</td>\r\n                                <td>{checkin.status}</td>\r\n                                <td>{JSON.stringify(checkin.coords)}</td>\r\n                                <td>{checkin.distance}</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n               \r\n            </table>\r\n        </div>\r\n        )\r\n}\r\nexport default App\r\n\r\nexport async function getServerSideProps({req, res}) {\r\n    const session = await auth0.getSession(req)\r\n    if(session){\r\n        const today = new Date()\r\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\r\n        const todaysCheckin = await db\r\n                                    .collection('markers')\r\n                                    .doc(currentDate)\r\n                                    .collection('checks')\r\n                                    .doc(session.user.sub)\r\n                                    .get()\r\n        const todaysData = todaysCheckin.data()\r\n        \r\n        let forceCreate = true\r\n        if(todaysData){\r\n            // pode ver os outros checkins\r\n            forceCreate = false\r\n            const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\r\n                center: todaysData.coordinates,\r\n                radius: 1000\r\n            }).get()\r\n            const checkinsList = []\r\n            checkins.docs.forEach(doc => {\r\n                checkinsList.push({\r\n                    id: doc.id,\r\n                    status: doc.data().status,\r\n                    coords: {\r\n                        lat: doc.data().coordinates.latitude,\r\n                        long: doc.data().coordinates.longitude\r\n                    },\r\n                    distance: distance(todaysData.coordinates.latitude, todaysData.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude)\r\n                })\r\n            })\r\n            return {\r\n                props: {\r\n                    isAuth: true,\r\n                    user: session.user,\r\n                    forceCreate: false,\r\n                    checkins: checkinsList\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            props: {\r\n                isAuth: true,\r\n                user: session.user,\r\n                forceCreate\r\n            }\r\n        }\r\n    }\r\n    console.log(session)\r\n    return{\r\n        props: {\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}